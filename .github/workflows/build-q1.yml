name: Build to Q1

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Define variables
        id: vars
        run: |
          echo ::set-output name=VERSION::$(git tag  | sed 's/.*\(v[0-9].[0-9].[0-9]\).*/\1/p' | sort -V | tail -1)-$(echo ${GITHUB_SHA::7})
          echo ::set-output name=RUN_ID::${GITHUB_RUN_ID}
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build application
        id: build
        run: |
          version=${{ steps.vars.outputs.VERSION }}
          gradle clean build deploy -Pversion=${version//v}
          echo ::set-output name=FILENAME::navno-${version//v}.jar
      - uses: actions/upload-artifact@v1
        with:
          name: Application
          path: build/libs
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.VERSION }}
          release_name: Release ${{ steps.vars.outputs.VERSION }}
          prerelease: true
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/${{ steps.build.outputs.FILENAME }}
          asset_name: ${{ steps.build.outputs.FILENAME }}
          asset_content_type: application/java-archive
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          event-type: deploy-to-q1
          token: ${{ secrets.GITHUB_PAT }}
          client-payload: '{"RUN_ID": "${{ steps.vars.outputs.RUN_ID }}"}'
