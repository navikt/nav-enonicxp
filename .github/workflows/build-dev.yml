name: Build to dev

on:
  push:
    tags:
      - "v*-*"
      - "!v*-*-*"
    branches:
      - develop
jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev-sbs:personbruker
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Define variables
        id: vars
        run: |
          echo ::set-output name=VERSION::$(git tag | grep -E '^v[0-9]' | grep -v '-' | sort -V | tail -1)-$(git rev-parse --short HEAD)
          echo ::set-output name=RUN_ID::${GITHUB_RUN_ID}
      - name: Fetch url lookup table from nav-enonicxp-iac
        run: |
          curl \
            -o url-lookup-table.json \
            -H "Authorization: Bearer ${{ secrets.GITHUB_PAT }}" \
            -H "Accept: application/vnd.github.v3.raw" \
            -L "https://api.github.com/repos/navikt/nav-enonicxp-iac/contents/url-lookup-tables/dev.json"
          mkdir -p src/main/resources/assets/iac && cp url-lookup-table.json "$_"
          echo "$(cat url-lookup-table.json)"
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build application
        id: build
        run: |
          version=${{ steps.vars.outputs.VERSION }}
          gradle clean build deploy -Pversion=${version//v}
          echo ::set-output name=FILENAME::navno-${version//v}.jar
      - uses: actions/upload-artifact@v1
        with:
          name: Application
          path: build/libs
      - name: Create release
        id: create_release
        uses: fleskesvor/create-release@1a72e235c178bf2ae6c51a8ae36febc24568c5fe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.VERSION }}
          release_name: Release ${{ steps.vars.outputs.VERSION }}
          prerelease: true
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/${{ steps.build.outputs.FILENAME }}
          asset_name: ${{ steps.build.outputs.FILENAME }}
          asset_content_type: application/java-archive
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          event-type: deploy-to-dev
          token: ${{ secrets.GITHUB_PAT }}
          client-payload: '{"RUN_ID": "${{ steps.vars.outputs.RUN_ID }}"}'
