name: Deploy to dev

on:
  repository_dispatch:
    types: deploy-to-dev

jobs:
  deploy:
    runs-on: self-hosted
    environment: dev-sbs:personbruker
    steps:
      - name: Cleanup
        run: rm -rf $(ls navno.jar)
      - name: Download artifact
        env:
          DEPLOY_PAT: ${{ secrets.DEPLOY_PAT }}
          GITHUB_REPOSITORY: ${{ secrets.GITHUB_REPOSITORY }}
          GITHUB_BUILD_RUN_ID: ${{ github.event.inputs.RUN_ID }}
        run: |
          ARTIFACT_ID="$(curl \
          -H "authorization: Bearer ${DEPLOY_PAT}" \
          -s https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_BUILD_RUN_ID}/artifacts \
          | jq '.artifacts[0].id')"

          echo Downloading artifact $ARTIFACT_ID
          curl -o app.zip \
          --cacert /etc/pki/tls/cacert.pem \
          -H "Authorization: Bearer ${DEPLOY_PAT}" \
          -L "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/artifacts/$ARTIFACT_ID/zip"
          unzip -o app.zip
      - name: Deploy application
        env:
          ENONIC_CLI_REMOTE_URL: ${{ secrets.ENONIC_CLI_REMOTE_URL }}
          ENONIC_CLI_REMOTE_USER: ${{ secrets.ENONIC_CLI_REMOTE_USER }}
          ENONIC_CLI_REMOTE_PASS: ${{ secrets.ENONIC_CLI_REMOTE_PASS }}
        run: |
          echo Deploying $(ls navno.jar)
          curl \
            -k ${ENONIC_CLI_REMOTE_URL} \
            --user "${ENONIC_CLI_REMOTE_USER}:${ENONIC_CLI_REMOTE_PASS}" \
            -F file=@$(ls navno.jar)
