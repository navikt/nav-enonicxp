# Access control entry.
type AccessControlEntry {
    principal: PrincipalKey
    allow: [Permission]
    deny: [Permission]
}

# Aggregation input type
input AggregationInput {
    subAggregations: [AggregationInput]
    name: String
    terms: TermsAggregationInput
    stats: StatsAggregationInput
    range: RangeAggregationInput
    dateRange: DateRangeAggregationInput
    dateHistogram: DateHistogramAggregationInput
    geoDistance: GeoDistanceAggregationInput
}

# Attachment.
type Attachment {
    name: String
    label: String
    size: Int
    mimeType: String
    attachmentUrl(download: Boolean, type: UrlType, params: String): String
    attachmentText(maxSize: Int): String
}

# Folder - base:folder
type base_Folder implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# Media - base:media
type base_Media implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# Shortcut - base:shortcut
type base_Shortcut implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: base_Shortcut_Data
}

# Shortcut data
type base_Shortcut_Data {
    target: Content
    parameters(offset: Int, first: Int): [base_Shortcut_Parameters]
}

# Parameters
type base_Shortcut_Parameters {
    name: String
    value: String
}

# Structured - base:structured
type base_Structured implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# Unstructured - base:unstructured
type base_Unstructured implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# BooleanFilter input type
input BooleanFilterInput {
    must: [FilterInput]
    mustNot: [FilterInput]
    should: [FilterInput]
}

# Component.
type Component {
    type: ComponentType!
    path: String!
    page: PageComponentData
    layout: LayoutComponentData
    image: ImageComponentData
    part: PartComponentData
    text: TextComponentData
    fragment: FragmentComponentData
}

# Component type.
enum ComponentType {
    page
    layout
    image
    part
    text
    fragment
}

# Content.
interface Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

type ContentConnection {
    totalCount: Int!
    edges: [ContentEdge]
    pageInfo: PageInfo
}

type ContentEdge {
    node: Content!
    cursor: String!
}

# Content type.
type ContentType {
    name: String
    displayName: String
    description: String
    superType: String
    abstract: Boolean
    final: Boolean
    allowChildContent: Boolean
    contentDisplayNameScript: String
    icon: Icon
    form: [FormItem]
    formAsJson: JSON
    getInstances(offset: Int, first: Int, query: String, sort: String): [Content]
    getInstanceConnection(
        after: String
        first: Int
        query: String
        sort: String
    ): ContentConnection
}

# An RFC-3339 compliant Full Date Scalar
scalar Date

# DateHistogram aggregation input type
input DateHistogramAggregationInput {
    field: String!
    interval: String
    format: String
    minDocCount: Int
}

# DateRange aggregation input type
input DateRangeAggregationInput {
    field: String!
    format: String
    ranges: [DateRangeInput]
}

# Date range input type
input DateRangeInput {
    from: String
    to: String
}

# An RFC-3339 compliant DateTime Scalar
scalar DateTime

# Default value.
type DefaultValue {
    value: String
    type: String
}

type Event {
    type: String
    timestamp: String
    localOrigin: Boolean
    distributed: Boolean
    dataAsJson: JSON
}

# ExistsFilter input type
input ExistsFilterInput {
    field: String!
}

# Extra data.
type ExtraData {
    name: String
    data: String
}

# Filter input type
input FilterInput {
    boolean: BooleanFilterInput
    exists: ExistsFilterInput
    notExists: NotExistsFilterInput
    hasValue: HasValueFilterInput
    ids: IdsFilterInput
}

# Form input.
type FormInput implements FormItem {
    formItemType: FormItemType
    name: String
    label: String
    customText: String
    helpText: String
    validationRegexp: String
    maximize: Boolean
    inputType: String
    occurrences: Occurrences
    defaultValue: DefaultValue
    configAsJson: JSON
}

# Form item.
interface FormItem {
    formItemType: FormItemType
    name: String
    label: String
}

# Form item set.
type FormItemSet implements FormItem {
    formItemType: FormItemType
    name: String
    label: String
    customText: String
    helpText: String
    occurrences: Occurrences
    items: [FormItem]
}

# Form item type
enum FormItemType {
    ItemSet
    Layout
    Input
    OptionSet
}

# Form layout.
type FormLayout implements FormItem {
    formItemType: FormItemType
    name: String
    label: String
    items: [FormItem]
}

# Form option set.
type FormOptionSet implements FormItem {
    formItemType: FormItemType
    name: String
    label: String
    expanded: Boolean
    helpText: String
    occurrences: Occurrences
    selection: Occurrences
    options: [FormOptionSetOption]
}

# Form option set option.
type FormOptionSetOption {
    name: String
    label: String
    helpText: String
    default: Boolean
    items: [FormItem]
}

# Fragment component data.
type FragmentComponentData {
    id: ID!
    fragment: Content
}

# GeoDistance aggregation input type
input GeoDistanceAggregationInput {
    field: String!
    unit: String
    origin: GeoPointInput
    ranges: [NumberRangeInput]
}

# Geo range input type
input GeoPointInput {
    lat: String
    lon: String
}

# Global verdi
type GlobalValueItem {
    key: String
    itemName: String
    numberValue: Float
}

# HasValueFilter input type
input HasValueFilterInput {
    field: String!
    stringValues: [String]
    intValues: [Int]
    floatValues: [Float]
    booleanValues: [Boolean]
}

# Headless CMS
type HeadlessCms {
    get(key: ID): Content
    getChildren(key: ID, offset: Int, first: Int, sort: String): [Content]
    getChildrenConnection(
        key: ID
        after: String
        first: Int
        sort: String
    ): ContentConnection
    getPermissions(key: ID): Permissions
    getSite: portal_Site
    query(
        query: String
        offset: Int
        first: Int
        sort: String
        contentTypes: [String]
        filters: [FilterInput]
    ): [Content]
    queryConnection(
        query: String!
        after: String
        first: Int
        sort: String
        contentTypes: [String]
        aggregations: [AggregationInput]
        filters: [FilterInput]
    ): QueryContentConnection
    getType(name: String!): ContentType
    getTypes: [ContentType]
}

# Icon.
type Icon {
    mimeType: String
    modifiedTime: String
}

# IdsFilter input type
input IdsFilterInput {
    values: [String]
}

# Image type.
type Image {
    image: Content
    ref: String
    style: ImageStyle
}

# Image component data.
type ImageComponentData {
    id: ID!
    caption: String
    image: media_Image
}

type ImageInfo {
    imageWidth: Int
    imageHeight: Int
    contentType: String
}

# ImageStyle type.
type ImageStyle {
    name: String
    aspectRatio: String
    filter: String
}

# A JSON scalar
scalar JSON

# Layout component' application config for application ['no.nav.navno']
type Layout_no_nav_navno_ComponentDataApplicationConfig {
    dynamic_1_col: Layout_no_nav_navno_dynamic_1_col
    dynamic_2_col: Layout_no_nav_navno_dynamic_2_col
    dynamic_3_col: Layout_no_nav_navno_dynamic_3_col
    dynamic_4_col: Layout_no_nav_navno_dynamic_4_col
    dynamic_flex_cols: Layout_no_nav_navno_dynamic_flex_cols
    product_flex_cols: Layout_no_nav_navno_product_flex_cols
    section_with_header: Layout_no_nav_navno_section_with_header
    situation_flex_cols: Layout_no_nav_navno_situation_flex_cols
}

# Layout component application config for application ['no.nav.navno'] and descriptor ['dynamic-1-col']
type Layout_no_nav_navno_dynamic_1_col {
    marginTop: Float
    marginBottom: Float
    paddingSides: Layout_no_nav_navno_dynamic_1_col_HorisontalPadding
    paddingTopBottom: Layout_no_nav_navno_dynamic_1_col_VertikalPadding
    bgColor: Layout_no_nav_navno_dynamic_1_col_Bakgrunnsfarge
    renderOnAuthState: String
}

# Bakgrunnsfarge
type Layout_no_nav_navno_dynamic_1_col_Bakgrunnsfarge {
    color: String
}

# Horisontal padding
type Layout_no_nav_navno_dynamic_1_col_HorisontalPadding {
    _selected: Layout_no_nav_navno_dynamic_1_col_HorisontalPadding_OptionEnum
    standard: String
    fullWidth: String
    custom: Layout_no_nav_navno_dynamic_1_col_Tilpasset
}

# Horisontal padding option enum.
enum Layout_no_nav_navno_dynamic_1_col_HorisontalPadding_OptionEnum {
    standard
    fullWidth
    custom
}

# Tilpasset
type Layout_no_nav_navno_dynamic_1_col_Tilpasset {
    remValue: Float
}

# Tilpasset
type Layout_no_nav_navno_dynamic_1_col_Tilpasset_2 {
    remValue: Float
}

# Vertikal padding
type Layout_no_nav_navno_dynamic_1_col_VertikalPadding {
    _selected: Layout_no_nav_navno_dynamic_1_col_VertikalPadding_OptionEnum
    standard: String
    custom: Layout_no_nav_navno_dynamic_1_col_Tilpasset_2
}

# Vertikal padding option enum.
enum Layout_no_nav_navno_dynamic_1_col_VertikalPadding_OptionEnum {
    standard
    custom
}

# Layout component application config for application ['no.nav.navno'] and descriptor ['dynamic-2-col']
type Layout_no_nav_navno_dynamic_2_col {
    distribution: String
    marginTop: Float
    marginBottom: Float
    paddingSides: Layout_no_nav_navno_dynamic_2_col_HorisontalPadding
    paddingTopBottom: Layout_no_nav_navno_dynamic_2_col_VertikalPadding
    bgColor: Layout_no_nav_navno_dynamic_2_col_Bakgrunnsfarge
    renderOnAuthState: String
}

# Bakgrunnsfarge
type Layout_no_nav_navno_dynamic_2_col_Bakgrunnsfarge {
    color: String
}

# Horisontal padding
type Layout_no_nav_navno_dynamic_2_col_HorisontalPadding {
    _selected: Layout_no_nav_navno_dynamic_2_col_HorisontalPadding_OptionEnum
    standard: String
    fullWidth: String
    custom: Layout_no_nav_navno_dynamic_2_col_Tilpasset
}

# Horisontal padding option enum.
enum Layout_no_nav_navno_dynamic_2_col_HorisontalPadding_OptionEnum {
    standard
    fullWidth
    custom
}

# Tilpasset
type Layout_no_nav_navno_dynamic_2_col_Tilpasset {
    remValue: Float
}

# Tilpasset
type Layout_no_nav_navno_dynamic_2_col_Tilpasset_2 {
    remValue: Float
}

# Vertikal padding
type Layout_no_nav_navno_dynamic_2_col_VertikalPadding {
    _selected: Layout_no_nav_navno_dynamic_2_col_VertikalPadding_OptionEnum
    standard: String
    custom: Layout_no_nav_navno_dynamic_2_col_Tilpasset_2
}

# Vertikal padding option enum.
enum Layout_no_nav_navno_dynamic_2_col_VertikalPadding_OptionEnum {
    standard
    custom
}

# Layout component application config for application ['no.nav.navno'] and descriptor ['dynamic-3-col']
type Layout_no_nav_navno_dynamic_3_col {
    distribution: String
    marginTop: Float
    marginBottom: Float
    paddingSides: Layout_no_nav_navno_dynamic_3_col_HorisontalPadding
    paddingTopBottom: Layout_no_nav_navno_dynamic_3_col_VertikalPadding
    bgColor: Layout_no_nav_navno_dynamic_3_col_Bakgrunnsfarge
    renderOnAuthState: String
}

# Bakgrunnsfarge
type Layout_no_nav_navno_dynamic_3_col_Bakgrunnsfarge {
    color: String
}

# Horisontal padding
type Layout_no_nav_navno_dynamic_3_col_HorisontalPadding {
    _selected: Layout_no_nav_navno_dynamic_3_col_HorisontalPadding_OptionEnum
    standard: String
    fullWidth: String
    custom: Layout_no_nav_navno_dynamic_3_col_Tilpasset
}

# Horisontal padding option enum.
enum Layout_no_nav_navno_dynamic_3_col_HorisontalPadding_OptionEnum {
    standard
    fullWidth
    custom
}

# Tilpasset
type Layout_no_nav_navno_dynamic_3_col_Tilpasset {
    remValue: Float
}

# Tilpasset
type Layout_no_nav_navno_dynamic_3_col_Tilpasset_2 {
    remValue: Float
}

# Vertikal padding
type Layout_no_nav_navno_dynamic_3_col_VertikalPadding {
    _selected: Layout_no_nav_navno_dynamic_3_col_VertikalPadding_OptionEnum
    standard: String
    custom: Layout_no_nav_navno_dynamic_3_col_Tilpasset_2
}

# Vertikal padding option enum.
enum Layout_no_nav_navno_dynamic_3_col_VertikalPadding_OptionEnum {
    standard
    custom
}

# Layout component application config for application ['no.nav.navno'] and descriptor ['dynamic-4-col']
type Layout_no_nav_navno_dynamic_4_col {
    distribution: String
    marginTop: Float
    marginBottom: Float
    paddingSides: Layout_no_nav_navno_dynamic_4_col_HorisontalPadding
    paddingTopBottom: Layout_no_nav_navno_dynamic_4_col_VertikalPadding
    bgColor: Layout_no_nav_navno_dynamic_4_col_Bakgrunnsfarge
    renderOnAuthState: String
}

# Bakgrunnsfarge
type Layout_no_nav_navno_dynamic_4_col_Bakgrunnsfarge {
    color: String
}

# Horisontal padding
type Layout_no_nav_navno_dynamic_4_col_HorisontalPadding {
    _selected: Layout_no_nav_navno_dynamic_4_col_HorisontalPadding_OptionEnum
    standard: String
    fullWidth: String
    custom: Layout_no_nav_navno_dynamic_4_col_Tilpasset
}

# Horisontal padding option enum.
enum Layout_no_nav_navno_dynamic_4_col_HorisontalPadding_OptionEnum {
    standard
    fullWidth
    custom
}

# Tilpasset
type Layout_no_nav_navno_dynamic_4_col_Tilpasset {
    remValue: Float
}

# Tilpasset
type Layout_no_nav_navno_dynamic_4_col_Tilpasset_2 {
    remValue: Float
}

# Vertikal padding
type Layout_no_nav_navno_dynamic_4_col_VertikalPadding {
    _selected: Layout_no_nav_navno_dynamic_4_col_VertikalPadding_OptionEnum
    standard: String
    custom: Layout_no_nav_navno_dynamic_4_col_Tilpasset_2
}

# Vertikal padding option enum.
enum Layout_no_nav_navno_dynamic_4_col_VertikalPadding_OptionEnum {
    standard
    custom
}

# Layout component application config for application ['no.nav.navno'] and descriptor ['dynamic-flex-cols']
type Layout_no_nav_navno_dynamic_flex_cols {
    numCols: Int
    justifyContent: String
    marginTop: Float
    marginBottom: Float
    paddingSides: Layout_no_nav_navno_dynamic_flex_cols_HorisontalPadding
    paddingTopBottom: Layout_no_nav_navno_dynamic_flex_cols_VertikalPadding
    bgColor: Layout_no_nav_navno_dynamic_flex_cols_Bakgrunnsfarge
    renderOnAuthState: String
}

# Bakgrunnsfarge
type Layout_no_nav_navno_dynamic_flex_cols_Bakgrunnsfarge {
    color: String
}

# Horisontal padding
type Layout_no_nav_navno_dynamic_flex_cols_HorisontalPadding {
    _selected: Layout_no_nav_navno_dynamic_flex_cols_HorisontalPadding_OptionEnum
    standard: String
    fullWidth: String
    custom: Layout_no_nav_navno_dynamic_flex_cols_Tilpasset
}

# Horisontal padding option enum.
enum Layout_no_nav_navno_dynamic_flex_cols_HorisontalPadding_OptionEnum {
    standard
    fullWidth
    custom
}

# Tilpasset
type Layout_no_nav_navno_dynamic_flex_cols_Tilpasset {
    remValue: Float
}

# Tilpasset
type Layout_no_nav_navno_dynamic_flex_cols_Tilpasset_2 {
    remValue: Float
}

# Vertikal padding
type Layout_no_nav_navno_dynamic_flex_cols_VertikalPadding {
    _selected: Layout_no_nav_navno_dynamic_flex_cols_VertikalPadding_OptionEnum
    standard: String
    custom: Layout_no_nav_navno_dynamic_flex_cols_Tilpasset_2
}

# Vertikal padding option enum.
enum Layout_no_nav_navno_dynamic_flex_cols_VertikalPadding_OptionEnum {
    standard
    custom
}

# Layout component application config for application ['no.nav.navno'] and descriptor ['product-flex-cols']
type Layout_no_nav_navno_product_flex_cols {
    title: String
    anchorId: String
    hideFromInternalNavigation: Boolean
    toggleCopyButton: Boolean
    usageContext: String
}

# Layout component application config for application ['no.nav.navno'] and descriptor ['section-with-header']
type Layout_no_nav_navno_section_with_header {
    title: String
    anchorId: String
    hideFromInternalNavigation: Boolean
    toggleCopyButton: Boolean
    icon: Layout_no_nav_navno_section_with_header_Ikon
    bgColor: Layout_no_nav_navno_section_with_header_Bakgrunnsfarge
    border: Layout_no_nav_navno_section_with_header_Omriss
}

# Bakgrunnsfarge
type Layout_no_nav_navno_section_with_header_Bakgrunnsfarge {
    color: String
}

# Ikon
type Layout_no_nav_navno_section_with_header_Ikon {
    icon: Content
    size: Int
    color: String
}

# Omriss
type Layout_no_nav_navno_section_with_header_Omriss {
    color: String
    rounded: Boolean
    width: Int
}

# Layout component application config for application ['no.nav.navno'] and descriptor ['situation-flex-cols']
type Layout_no_nav_navno_situation_flex_cols {
    title: String
    anchorId: String
    hideFromInternalNavigation: Boolean
    toggleCopyButton: Boolean
    numCols: Int
    justifyContent: String
    bgColor: Layout_no_nav_navno_situation_flex_cols_Bakgrunnsfarge
}

# Bakgrunnsfarge
type Layout_no_nav_navno_situation_flex_cols_Bakgrunnsfarge {
    color: String
}

# Layout component data.
type LayoutComponentData {
    descriptor: String!
    config: LayoutComponentDataConfig
    configAsJson: JSON
}

# Layout component config.
type LayoutComponentDataConfig {
    no_nav_navno: Layout_no_nav_navno_ComponentDataApplicationConfig
}

# Macro type.
type Macro {
    ref: String
    name: String
    descriptor: String
    config: MacroConfig
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['alert-box']
type Macro_no_nav_navno_alert_box_DataConfig {
    body(processHtml: ProcessHtmlInput): String
    type: String
    size: String
    inline: Boolean
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['alert-box']
type Macro_no_nav_navno_alert_box_DataConfig_HtmlFragment {
    body(processHtml: ProcessHtmlInput): String
    type: String
    size: String
    inline: Boolean
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['button-blue']
type Macro_no_nav_navno_button_blue_DataConfig {
    body: String
    url: String
    text: String
    content: Content
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['button-blue']
type Macro_no_nav_navno_button_blue_DataConfig_HtmlFragment {
    url: String
    text: String
    content: Content
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['button']
type Macro_no_nav_navno_button_DataConfig {
    body: String
    url: String
    text: String
    content: Content
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['button']
type Macro_no_nav_navno_button_DataConfig_HtmlFragment {
    url: String
    text: String
    content: Content
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['chatbot-link']
type Macro_no_nav_navno_chatbot_link_DataConfig {
    body: String
    text: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['chatbot-link']
type Macro_no_nav_navno_chatbot_link_DataConfig_HtmlFragment {
    text: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['chevron-link-external']
type Macro_no_nav_navno_chevron_link_external_DataConfig {
    body: String
    url: String
    text: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['chevron-link-external']
type Macro_no_nav_navno_chevron_link_external_DataConfig_HtmlFragment {
    url: String
    text: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['chevron-link-internal']
type Macro_no_nav_navno_chevron_link_internal_DataConfig {
    body: String
    target: Content
    text: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['chevron-link-internal']
type Macro_no_nav_navno_chevron_link_internal_DataConfig_HtmlFragment {
    target: Content
    text: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['fotnote']
type Macro_no_nav_navno_fotnote_DataConfig {
    body: String
    fotnote: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['fotnote']
type Macro_no_nav_navno_fotnote_DataConfig_HtmlFragment {
    fotnote: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['global-value']
type Macro_no_nav_navno_global_value_DataConfig {
    body: String
    key: String
    value: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['global-value']
type Macro_no_nav_navno_global_value_DataConfig_HtmlFragment {
    key: String
    value: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['global-value-with-math']
type Macro_no_nav_navno_global_value_with_math_DataConfig {
    body: String
    keys(offset: Int, first: Int): [String]
    expression: String
    decimals: Int
    variables: [Float]
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['global-value-with-math']
type Macro_no_nav_navno_global_value_with_math_DataConfig_HtmlFragment {
    keys(offset: Int, first: Int): [String]
    expression: String
    decimals: Int
    variables: [Float]
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['header-with-anchor']
type Macro_no_nav_navno_header_with_anchor_DataConfig {
    body: String
    id: String
    tag: String
    text: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['header-with-anchor']
type Macro_no_nav_navno_header_with_anchor_DataConfig_HtmlFragment {
    body: String
    id: String
    tag: String
    text: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['html-fragment']
type Macro_no_nav_navno_html_fragment_DataConfig {
    body: String
    fragmentId: String
    processedHtml: RichTextHtmlFragment
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['infoBoks']
type Macro_no_nav_navno_infoBoks_DataConfig {
    body: String
    infoBoks: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['infoBoks']
type Macro_no_nav_navno_infoBoks_DataConfig_HtmlFragment {
    infoBoks: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['ingress']
type Macro_no_nav_navno_ingress_DataConfig {
    body: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['ingress']
type Macro_no_nav_navno_ingress_DataConfig_HtmlFragment {
    body: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['lenkeFiler']
type Macro_no_nav_navno_lenkeFiler_DataConfig {
    body: String
    text: String
    files(offset: Int, first: Int): [Content]
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['lenkeFiler']
type Macro_no_nav_navno_lenkeFiler_DataConfig_HtmlFragment {
    text: String
    files(offset: Int, first: Int): [Content]
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['phone-link']
type Macro_no_nav_navno_phone_link_DataConfig {
    body: String
    text: String
    phoneNumber: String
    chevron: Boolean
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['phone-link']
type Macro_no_nav_navno_phone_link_DataConfig_HtmlFragment {
    text: String
    phoneNumber: String
    chevron: Boolean
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['product-card-mini']
type Macro_no_nav_navno_product_card_mini_DataConfig {
    body: String
    targetPage: Content
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['product-card-mini']
type Macro_no_nav_navno_product_card_mini_DataConfig_HtmlFragment {
    targetPage: Content
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['quote']
type Macro_no_nav_navno_quote_DataConfig {
    body: String
    quote: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['quote']
type Macro_no_nav_navno_quote_DataConfig_HtmlFragment {
    quote: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['tankestrek']
type Macro_no_nav_navno_tankestrek_DataConfig {
    body: String
    dummy: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['tankestrek']
type Macro_no_nav_navno_tankestrek_DataConfig_HtmlFragment {
    dummy: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['varselBoks']
type Macro_no_nav_navno_varselBoks_DataConfig {
    body: String
    varselBoks: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['varselBoks']
type Macro_no_nav_navno_varselBoks_DataConfig_HtmlFragment {
    varselBoks: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['video']
type Macro_no_nav_navno_video_DataConfig {
    body: String
    video: String
    title: String
}

# Macro descriptor data config for application ['no.nav.navno'] and descriptor ['video']
type Macro_no_nav_navno_video_DataConfig_HtmlFragment {
    video: String
    title: String
}

# Macro descriptor data config for application ['system'] and descriptor ['disable']
type Macro_system_disable_DataConfig {
    body: String
}

# Macro descriptor data config for application ['system'] and descriptor ['disable']
type Macro_system_disable_DataConfig_HtmlFragment {
    body: String
}

# Macro descriptor data config for application ['system'] and descriptor ['embed']
type Macro_system_embed_DataConfig {
    body: String
}

# Macro descriptor data config for application ['system'] and descriptor ['embed']
type Macro_system_embed_DataConfig_HtmlFragment {
    body: String
}

# Macro config type.
type MacroConfig {
    alert_box: Macro_no_nav_navno_alert_box_DataConfig
    button_blue: Macro_no_nav_navno_button_blue_DataConfig
    button: Macro_no_nav_navno_button_DataConfig
    chatbot_link: Macro_no_nav_navno_chatbot_link_DataConfig
    chevron_link_external: Macro_no_nav_navno_chevron_link_external_DataConfig
    chevron_link_internal: Macro_no_nav_navno_chevron_link_internal_DataConfig
    fotnote: Macro_no_nav_navno_fotnote_DataConfig
    global_value_with_math: Macro_no_nav_navno_global_value_with_math_DataConfig
    global_value: Macro_no_nav_navno_global_value_DataConfig
    header_with_anchor: Macro_no_nav_navno_header_with_anchor_DataConfig
    html_fragment: Macro_no_nav_navno_html_fragment_DataConfig
    infoBoks: Macro_no_nav_navno_infoBoks_DataConfig
    ingress: Macro_no_nav_navno_ingress_DataConfig
    lenkeFiler: Macro_no_nav_navno_lenkeFiler_DataConfig
    phone_link: Macro_no_nav_navno_phone_link_DataConfig
    product_card_mini: Macro_no_nav_navno_product_card_mini_DataConfig
    quote: Macro_no_nav_navno_quote_DataConfig
    tankestrek: Macro_no_nav_navno_tankestrek_DataConfig
    varselBoks: Macro_no_nav_navno_varselBoks_DataConfig
    video: Macro_no_nav_navno_video_DataConfig
    disable: Macro_system_disable_DataConfig
    embed: Macro_system_embed_DataConfig
}

# Macro config type modified for html-fragment
type MacroConfigHtmlFragment {
    alert_box: Macro_no_nav_navno_alert_box_DataConfig_HtmlFragment
    button_blue: Macro_no_nav_navno_button_blue_DataConfig_HtmlFragment
    button: Macro_no_nav_navno_button_DataConfig_HtmlFragment
    chatbot_link: Macro_no_nav_navno_chatbot_link_DataConfig_HtmlFragment
    chevron_link_external: Macro_no_nav_navno_chevron_link_external_DataConfig_HtmlFragment
    chevron_link_internal: Macro_no_nav_navno_chevron_link_internal_DataConfig_HtmlFragment
    fotnote: Macro_no_nav_navno_fotnote_DataConfig_HtmlFragment
    global_value_with_math: Macro_no_nav_navno_global_value_with_math_DataConfig_HtmlFragment
    global_value: Macro_no_nav_navno_global_value_DataConfig_HtmlFragment
    header_with_anchor: Macro_no_nav_navno_header_with_anchor_DataConfig_HtmlFragment
    infoBoks: Macro_no_nav_navno_infoBoks_DataConfig_HtmlFragment
    ingress: Macro_no_nav_navno_ingress_DataConfig_HtmlFragment
    lenkeFiler: Macro_no_nav_navno_lenkeFiler_DataConfig_HtmlFragment
    phone_link: Macro_no_nav_navno_phone_link_DataConfig_HtmlFragment
    product_card_mini: Macro_no_nav_navno_product_card_mini_DataConfig_HtmlFragment
    quote: Macro_no_nav_navno_quote_DataConfig_HtmlFragment
    tankestrek: Macro_no_nav_navno_tankestrek_DataConfig_HtmlFragment
    varselBoks: Macro_no_nav_navno_varselBoks_DataConfig_HtmlFragment
    video: Macro_no_nav_navno_video_DataConfig_HtmlFragment
    disable: Macro_system_disable_DataConfig_HtmlFragment
    embed: Macro_system_embed_DataConfig_HtmlFragment
}

# Macro type modified for html-fragment
type MacroHtmlFragment {
    ref: String
    name: String
    descriptor: String
    config: MacroConfigHtmlFragment
}

# Archive - media:archive
type media_Archive implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    data: media_Archive_Data
}

# Archive data
type media_Archive_Data {
    media: Content
    tags(offset: Int, first: Int): [String]
}

# Audio - media:audio
type media_Audio implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    data: media_Audio_Data
}

# Audio data
type media_Audio_Data {
    media: Content
    tags(offset: Int, first: Int): [String]
}

# Code - media:code
type media_Code implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    data: media_Code_Data
    mediaText(maxSize: Int): String
}

# Code data
type media_Code_Data {
    media: Content
    tags(offset: Int, first: Int): [String]
}

# Data - media:data
type media_Data implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    data: media_Data_Data
}

# Data data
type media_Data_Data {
    media: Content
    tags(offset: Int, first: Int): [String]
}

# Document - media:document
type media_Document implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    data: media_Document_Data
}

# Document data
type media_Document_Data {
    media: Content
    abstract: String
    tags(offset: Int, first: Int): [String]
}

# Executable - media:executable
type media_Executable implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    data: media_Executable_Data
}

# Executable data
type media_Executable_Data {
    media: Content
    tags(offset: Int, first: Int): [String]
}

# Image - media:image
type media_Image implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    imageUrl(
        scale: String!
        quality: Int
        background: String
        format: String
        filter: String
        type: UrlType
        params: String
    ): String
    data: media_Image_Data
    imageInfo: ImageInfo
}

# Image data
type media_Image_Data {
    media: MediaUploader
    caption: String
    altText: String
    artist(offset: Int, first: Int): [String]
    copyright: String
    tags(offset: Int, first: Int): [String]
}

# Presentation - media:presentation
type media_Presentation implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    data: media_Presentation_Data
}

# Presentation data
type media_Presentation_Data {
    media: Content
    tags(offset: Int, first: Int): [String]
}

# Spreadsheet - media:spreadsheet
type media_Spreadsheet implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    data: media_Spreadsheet_Data
}

# Spreadsheet data
type media_Spreadsheet_Data {
    media: Content
    tags(offset: Int, first: Int): [String]
}

# Text - media:text
type media_Text implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    data: media_Text_Data
}

# Text data
type media_Text_Data {
    media: Content
    tags(offset: Int, first: Int): [String]
}

# Unknown - media:unknown
type media_Unknown implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    data: media_Unknown_Data
}

# Unknown data
type media_Unknown_Data {
    media: Content
    tags(offset: Int, first: Int): [String]
}

# Vector - media:vector
type media_Vector implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    data: media_Vector_Data
}

# Vector data
type media_Vector_Data {
    media: Content
    caption: String
    artist(offset: Int, first: Int): [String]
    copyright: String
    tags(offset: Int, first: Int): [String]
}

# Video - media:video
type media_Video implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    mediaUrl(download: Boolean, type: UrlType, params: String): String
    data: media_Video_Data
}

# Video data
type media_Video_Data {
    media: Content
    tags(offset: Int, first: Int): [String]
}

# Media focal point.
type MediaFocalPoint {
    x: Float
    y: Float
}

# Media uploader.
type MediaUploader {
    attachment: String
    focalPoint: MediaFocalPoint
}

# Lenker i høyremeny
type MenuListItem {
    links: [MenuListLink]
}

# Lenker i høyremeny
type MenuListItem_2 {
    links: [MenuListLink_2]
}

# Lenke i MenuListItem
type MenuListLink {
    url: String
    text: String
}

# Lenke i MenuListItem
type MenuListLink_2 {
    url: String
    text: String
}

# Søkegrensesnitt - navno.nav.no.search:search-api
type navno_nav_no_search_SearchApi implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# Prioritert søk ekstern - navno.nav.no.search:search-api2
type navno_nav_no_search_SearchApi2 implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: navno_nav_no_search_SearchApi2_Data
}

# Prioritert søk ekstern data
type navno_nav_no_search_SearchApi2_Data {
    applicationName: String
    keywords(offset: Int, first: Int): [String]
    url: String
    text(offset: Int, first: Int): [String]
    ingress: String
}

# Søkekonfigurasjon (fasetter) - navno.nav.no.search:search-config2
type navno_nav_no_search_SearchConfig2 implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: navno_nav_no_search_SearchConfig2_Data
}

type navno_nav_no_search_SearchConfig2_ {
    name: String
    rulekey: String
    rulevalue: String
    underfasetter(offset: Int, first: Int): [navno_nav_no_search_SearchConfig2__2]
}

type navno_nav_no_search_SearchConfig2__2 {
    name: String
    rulekey: String
    rulevalue: String
}

# Søkekonfigurasjon (fasetter) data
type navno_nav_no_search_SearchConfig2_Data {
    fasetter(offset: Int, first: Int): [navno_nav_no_search_SearchConfig2_]
}

# Prioritert søk intern - navno.nav.no.search:search-priority
type navno_nav_no_search_SearchPriority implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: navno_nav_no_search_SearchPriority_Data
}

# Prioritert søk intern data
type navno_nav_no_search_SearchPriority_Data {
    content: Content
    keywords(offset: Int, first: Int): [String]
}

# Søk - Stoppord - navno.nav.no.search:search-stopwords
type navno_nav_no_search_SearchStopwords implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: navno_nav_no_search_SearchStopwords_Data
}

# Søk - Stoppord data
type navno_nav_no_search_SearchStopwords_Data {
    words(offset: Int, first: Int): [String]
    csv: String
}

# Synonymer - navno.nav.no.search:synonyms
type navno_nav_no_search_Synonyms implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: navno_nav_no_search_Synonyms_Data
}

# Synonymer data
type navno_nav_no_search_Synonyms_Data {
    synonyms(offset: Int, first: Int): [navno_nav_no_search_Synonyms_Synonymer]
}

# Synonymer
type navno_nav_no_search_Synonyms_Synonymer {
    synonym(offset: Int, first: Int): [String]
}

# Illustrasjon - no.nav.navno:animated-icons
type no_nav_navno_AnimatedIcons implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_AnimatedIcons_Data
}

# Illustrasjon data
type no_nav_navno_AnimatedIcons_Data {
    icons(offset: Int, first: Int): [no_nav_navno_AnimatedIcons_VelgIkoner]
    lottieHover: Content
    lottieActive: Content
}

# Velg ikoner
type no_nav_navno_AnimatedIcons_VelgIkoner {
    icon: Content
    transformStart: String
    transformEnd: String
    transformOrigin: String
}

# Kampanje - Skal ikke brukes - no.nav.navno:breaking-news
type no_nav_navno_BreakingNews implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# Kalkulator - no.nav.navno:calculator
type no_nav_navno_Calculator implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_Calculator_Data
}

# Kalkulator data
type no_nav_navno_Calculator_Data {
    fields(offset: Int, first: Int): [no_nav_navno_Calculator_Variabel]
    calculationScript: String
    useThousandSeparator: Boolean
    summaryText: String
}

# Global verdi
type no_nav_navno_Calculator_GlobalVerdi {
    key: String
    variableName: String
    value: Float
}

# Listevalg
type no_nav_navno_Calculator_Listevalg {
    label: String
    optionItems(offset: Int, first: Int): [no_nav_navno_Calculator_Valg]
    explanation: String
    variableName: String
}

# Nummerfelt
type no_nav_navno_Calculator_Nummerfelt {
    label: String
    explanation: String
    variableName: String
}

# Valg
type no_nav_navno_Calculator_Valg {
    label: String
    value: Float
}

# Variabel
type no_nav_navno_Calculator_Variabel {
    _selected: no_nav_navno_Calculator_Variabel_OptionEnum
    inputField: no_nav_navno_Calculator_Nummerfelt
    dropdownField: no_nav_navno_Calculator_Listevalg
    globalValue: no_nav_navno_Calculator_GlobalVerdi
}

# Variabel option enum.
enum no_nav_navno_Calculator_Variabel_OptionEnum {
    inputField
    dropdownField
    globalValue
}

# Cms2xp_page - Skal ikke brukes - no.nav.navno:cms2xp_page
type no_nav_navno_Cms2xpPage implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# Cms2xp_section - Skal ikke brukes - no.nav.navno:cms2xp_section
type no_nav_navno_Cms2xpSection implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# Kontaktinformasjon - no.nav.navno:contact-information
type no_nav_navno_ContactInformation implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_ContactInformation_Data
}

# Kontaktinformasjon data
type no_nav_navno_ContactInformation_Data {
    contactType: no_nav_navno_ContactInformation_Kontakttype
}

# Kontakttype
type no_nav_navno_ContactInformation_Kontakttype {
    _selected: no_nav_navno_ContactInformation_Kontakttype_OptionEnum
    telephone: no_nav_navno_ContactInformation_Telefonnummer
}

# Kontakttype option enum.
enum no_nav_navno_ContactInformation_Kontakttype_OptionEnum {
    telephone
}

# Telefonnummer
type no_nav_navno_ContactInformation_Telefonnummer {
    title: String
    phoneNumber: String
    text: String
    alertText: String
    regularOpeningHours: regularOpeningHours
    specialOpeningHours: specialOpeningHours
}

# Innholdsliste - no.nav.navno:content-list
type no_nav_navno_ContentList implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_ContentList_Data
}

# Innholdsliste data
type no_nav_navno_ContentList_Data {
    sectionContents(offset: Int, first: Int): [Content]
    sortedBy: String
}

# Produktside med sidemenyer - no.nav.navno:content-page-with-sidemenus
type no_nav_navno_ContentPageWithSidemenus implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_ContentPageWithSidemenus_Data
}

# Produktside med sidemenyer data
type no_nav_navno_ContentPageWithSidemenus_Data {
    title: String
    norwegianTitle: String
    ingress: String
    audience: String
    taxonomy(offset: Int, first: Int): [String]
    area(offset: Int, first: Int): [String]
    illustration: Content
    externalProductUrl: String
    languages(offset: Int, first: Int): [Content]
    customPath: String
    feedbackToggle: Boolean
    chatbotToggle: Boolean
    description: String
    keywords: String
    metaDescription: String
    canonicalUrl: String
    noindex: Boolean
}

# Dynamisk side - no.nav.navno:dynamic-page
type no_nav_navno_DynamicPage implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_DynamicPage_Data
}

# Dynamisk side data
type no_nav_navno_DynamicPage_Data {
    languages(offset: Int, first: Int): [Content]
    customPath: String
    feedbackToggle: Boolean
    chatbotToggle: Boolean
    description: String
    keywords: String
    metaDescription: String
    canonicalUrl: String
    noindex: Boolean
}

# Ekstern Lenke - no.nav.navno:external-link
type no_nav_navno_ExternalLink implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_ExternalLink_Data
}

# Ekstern Lenke data
type no_nav_navno_ExternalLink_Data {
    description: String
    url: String
    permanentRedirect: Boolean
    keywords: String
}

# Generic page - Skal ikke brukes - no.nav.navno:generic-page
type no_nav_navno_GenericPage implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# Globale verdier - no.nav.navno:global-value-set
type no_nav_navno_GlobalValueSet implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_GlobalValueSet_Data
}

# Data for globale verdier
type no_nav_navno_GlobalValueSet_Data {
    valueItems: [GlobalValueItem]
}

# Guide ("Slik gjør du") - no.nav.navno:guide-page
type no_nav_navno_GuidePage implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_GuidePage_Data
}

# Guide ("Slik gjør du") data
type no_nav_navno_GuidePage_Data {
    title: String
    norwegianTitle: String
    ingress: String
    audience: String
    area(offset: Int, first: Int): [String]
    illustration: Content
    externalProductUrl: String
    languages(offset: Int, first: Int): [Content]
    customPath: String
    feedbackToggle: Boolean
    chatbotToggle: Boolean
    description: String
    keywords: String
    metaDescription: String
    canonicalUrl: String
    noindex: Boolean
}

# Intern Lenke - no.nav.navno:internal-link
type no_nav_navno_InternalLink implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_InternalLink_Data
}

# Intern Lenke data
type no_nav_navno_InternalLink_Data {
    description: String
    target: Content
    permanentRedirect: Boolean
    keywords: String
}

# Ekstra stor tabell - no.nav.navno:large-table
type no_nav_navno_LargeTable implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_LargeTable_Data
}

# Ekstra stor tabell data
type no_nav_navno_LargeTable_Data {
    text(processHtml: ProcessHtmlInput): RichText
}

# link-list - Skal ikke brukes - no.nav.navno:link-list
type no_nav_navno_LinkList implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# Artikkel - no.nav.navno:main-article
type no_nav_navno_MainArticle implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_MainArticle_Data
}

# Bilde med beskrivelse
type no_nav_navno_MainArticle_BildeMedBeskrivelse {
    target: Content
    size: String
    caption: String
    altText: String
}

# Artikkel data
type no_nav_navno_MainArticle_Data {
    originaltitle: String
    ingress: String
    text(processHtml: ProcessHtmlInput): RichText
    contentType: String
    hasTableOfContents: String
    menuListItems: no_nav_navno_MainArticle_InnholdIHoyremenyen
    fact(processHtml: ProcessHtmlInput): RichText
    picture: no_nav_navno_MainArticle_BildeMedBeskrivelse
    social(offset: Int, first: Int): [String]
    languages(offset: Int, first: Int): [Content]
    feedbackToggle: Boolean
    chatbotToggle: Boolean
    metaDescription: String
    canonicalUrl: String
    noindex: Boolean
    keywords: String
    chapters: [Content]
}

# Innhold i høyremenyen
type no_nav_navno_MainArticle_InnholdIHoyremenyen {
    _selected: [no_nav_navno_MainArticle_InnholdIHoyremenyen_OptionEnum]
    selfservice: MenuListItem
    form_and_application: MenuListItem
    process_times: MenuListItem
    related_information: MenuListItem
    international: MenuListItem
    report_changes: MenuListItem
    rates: MenuListItem
    appeal_rights: MenuListItem
    membership: MenuListItem
    rules_and_regulations: MenuListItem
}

# Innhold i høyremenyen option enum.
enum no_nav_navno_MainArticle_InnholdIHoyremenyen_OptionEnum {
    selfservice
    form_and_application
    process_times
    related_information
    international
    report_changes
    rates
    appeal_rights
    membership
    rules_and_regulations
}

# Kapittel - no.nav.navno:main-article-chapter
type no_nav_navno_MainArticleChapter implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_MainArticleChapter_Data
}

# Kapittel data
type no_nav_navno_MainArticleChapter_Data {
    article: Content
    languages: [Content]
}

# Menyelement - no.nav.navno:megamenu-item
type no_nav_navno_MegamenuItem implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_MegamenuItem_Data
}

# Menyelement data
type no_nav_navno_MegamenuItem_Data {
    target: Content
    displayLock: Boolean
}

# Melding - no.nav.navno:melding
type no_nav_navno_Melding implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_Melding_Data
}

# Melding data
type no_nav_navno_Melding_Data {
    type: String
    ingress: String
    text(processHtml: ProcessHtmlInput): RichText
    urlscope: no_nav_navno_Melding_VisKunPaBestemteURLer
}

# Vis kun på bestemte URL'er
type no_nav_navno_Melding_VisKunPaBestemteURLer {
    urls(offset: Int, first: Int): [String]
}

# Varsel - no.nav.navno:notification
type no_nav_navno_Notification implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_Notification_Data
}

# Varsel data
type no_nav_navno_Notification_Data {
    icon: Content
    title: String
    showDescription: Boolean
    ingress: String
    showUpdated: Boolean
    target: Content
    notificationToReplaceId: Content
    type: String
}

# Enhetsinformasjon - no.nav.navno:office-information
type no_nav_navno_OfficeInformation implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_OfficeInformation_Data
}

# Åpningstider
type no_nav_navno_OfficeInformation_Apningstider {
    id: Int
    dag: String
    dato: String
    fra: String
    til: String
    kommentar: String
    stengt: String
}

# Besøksadresse
type no_nav_navno_OfficeInformation_Besoksadresse {
    type: String
    postnummer: String
    poststed: String
    gatenavn: String
    husnummer: String
    husbokstav: String
    adresseTilleggsnavn: String
}

# Besøksadresse
type no_nav_navno_OfficeInformation_Besoksadresse_2 {
    type: String
    postnummer: String
    poststed: String
    gatenavn: String
    husnummer: String
    husbokstav: String
    adresseTilleggsnavn: String
}

# Enhetsinformasjon data
type no_nav_navno_OfficeInformation_Data {
    enhet: no_nav_navno_OfficeInformation_Enhet
    overordnetEnhet: String
    habilitetskontor(offset: Int, first: Int): [String]
    kontaktinformasjon: no_nav_navno_OfficeInformation_Kontaktinformasjon
    feedbackToggle: Boolean
    chatbotToggle: Boolean
}

# Enhet
type no_nav_navno_OfficeInformation_Enhet {
    enhetId: Int
    navn: String
    enhetNr: String
    antallRessurser: Int
    status: String
    orgNivaa: String
    type: String
    organisasjonsnummer: String
    underEtableringDato: String
    aktiveringsdato: String
    underAvviklingDato: String
    nedleggelsesdato: String
    oppgavebehandler: String
    versjon: Int
    sosialeTjenester: String
    kanalstrategi: String
    orgNrTilKommunaltNavKontor: String
}

# E-post
type no_nav_navno_OfficeInformation_EPost {
    adresse: String
    kommentar: String
    kunIntern: String
}

# Kontaktinformasjon
type no_nav_navno_OfficeInformation_Kontaktinformasjon {
    id: Int
    enhetNr: String
    telefonnummer: String
    telefonnummerKommentar: String
    faksnummer: String
    epost: no_nav_navno_OfficeInformation_EPost
    postadresse: no_nav_navno_OfficeInformation_Postadresse
    besoeksadresse: no_nav_navno_OfficeInformation_Besoksadresse
    spesielleOpplysninger: String
    publikumsmottak(
        offset: Int
        first: Int
    ): [no_nav_navno_OfficeInformation_Publikumsmottak]
}

# Postadresse
type no_nav_navno_OfficeInformation_Postadresse {
    type: String
    postnummer: String
    poststed: String
    gatenavn: String
    husnummer: String
    husbokstav: String
    adresseTilleggsnavn: String
    postboksnummer: String
    postboksanlegg: String
}

# Publikumsmottak
type no_nav_navno_OfficeInformation_Publikumsmottak {
    id: Int
    stedsbeskrivelse: String
    besoeksadresse: no_nav_navno_OfficeInformation_Besoksadresse_2
    aapningstider(
        offset: Int
        first: Int
    ): [no_nav_navno_OfficeInformation_Apningstider]
}

# Artikkelliste - no.nav.navno:page-list
type no_nav_navno_PageList implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_PageList_Data
}

# Artikkelliste data
type no_nav_navno_PageList_Data {
    originaltitle: String
    ingress: String
    hide_date: Boolean
    hideSectionContentsDate: Boolean
    orderSectionContentsByPublished: Boolean
    sectionContents(offset: Int, first: Int): [Content]
    menuListItems: no_nav_navno_PageList_InnholdIHoyremenyen
    metaTags(offset: Int, first: Int): [String]
    languages(offset: Int, first: Int): [Content]
    feedbackToggle: Boolean
    chatbotToggle: Boolean
    metaDescription: String
    canonicalUrl: String
    noindex: Boolean
    keywords: String
}

# Innhold i høyremenyen
type no_nav_navno_PageList_InnholdIHoyremenyen {
    _selected: [no_nav_navno_PageList_InnholdIHoyremenyen_OptionEnum]
    shortcuts: MenuListItem_2
}

# Innhold i høyremenyen option enum.
enum no_nav_navno_PageList_InnholdIHoyremenyen_OptionEnum {
    shortcuts
}

# Publiseringskalender - no.nav.navno:publishing-calendar
type no_nav_navno_PublishingCalendar implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_PublishingCalendar_Data
}

# Publiseringskalender data
type no_nav_navno_PublishingCalendar_Data {
    ingress: String
    metaDescription: String
    canonicalUrl: String
    noindex: Boolean
    keywords: String
}

# Kalenderhendelse - no.nav.navno:publishing-calendar-entry
type no_nav_navno_PublishingCalendarEntry implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_PublishingCalendarEntry_Data
}

# Kalenderhendelse data
type no_nav_navno_PublishingCalendarEntry_Data {
    period: String
    date: Date
}

# Søkeresultat - no.nav.navno:searchresult
type no_nav_navno_Searchresult implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# Oppslagstavle - no.nav.navno:section-page
type no_nav_navno_SectionPage implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_SectionPage_Data
}

# Oppslagstavle data
type no_nav_navno_SectionPage_Data {
    ingress: String
    nrTableEntries: Int
    tableContents(offset: Int, first: Int): [Content]
    panelsHeading: String
    panelItems(
        offset: Int
        first: Int
    ): [no_nav_navno_SectionPage_KlikkbartLenkepanel]
    nrNews: Int
    newsContents: Content
    moreNewsUrl: String
    nrNTK: Int
    ntkContents: Content
    nrSC: Int
    scContents: Content
    breaking_news(offset: Int, first: Int): [Content]
    languages(offset: Int, first: Int): [Content]
    feedbackToggle: Boolean
    chatbotToggle: Boolean
    metaDescription: String
    canonicalUrl: String
    noindex: Boolean
    keywords: String
}

# Klikkbart lenkepanel
type no_nav_navno_SectionPage_KlikkbartLenkepanel {
    title: String
    ingress: String
    url: no_nav_navno_SectionPage_PekerTilInnhold
}

# Peker til innhold
type no_nav_navno_SectionPage_PekerTilInnhold {
    text: String
    ref: Content
}

# Oversiktsside for livssituasjon - no.nav.navno:situation-page
type no_nav_navno_SituationPage implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_SituationPage_Data
}

# Oversiktsside for livssituasjon data
type no_nav_navno_SituationPage_Data {
    title: String
    norwegianTitle: String
    ingress: String
    audience: String
    area(offset: Int, first: Int): [String]
    illustration: Content
    externalProductUrl: String
    languages(offset: Int, first: Int): [Content]
    customPath: String
    feedbackToggle: Boolean
    chatbotToggle: Boolean
    description: String
    keywords: String
    metaDescription: String
    canonicalUrl: String
    noindex: Boolean
}

# Temaartikkel - no.nav.navno:themed-article-page
type no_nav_navno_ThemedArticlePage implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_ThemedArticlePage_Data
}

# Temaartikkel data
type no_nav_navno_ThemedArticlePage_Data {
    title: String
    norwegianTitle: String
    ingress: String
    audience: String
    taxonomy(offset: Int, first: Int): [String]
    customCategory: String
    area(offset: Int, first: Int): [String]
    illustration: Content
    externalProductUrl: String
    languages(offset: Int, first: Int): [Content]
    customPath: String
    feedbackToggle: Boolean
    chatbotToggle: Boolean
    description: String
    keywords: String
    metaDescription: String
    canonicalUrl: String
    noindex: Boolean
}

# Verktøy-side - no.nav.navno:tools-page
type no_nav_navno_ToolsPage implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_ToolsPage_Data
}

# Verktøy-side data
type no_nav_navno_ToolsPage_Data {
    title: String
    norwegianTitle: String
    ingress: String
    audience: String
    taxonomy(offset: Int, first: Int): [String]
    area(offset: Int, first: Int): [String]
    illustration: Content
    externalProductUrl: String
    customPath: String
}

# Transportside - no.nav.navno:transport-page
type no_nav_navno_TransportPage implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_TransportPage_Data
}

# Transportside data
type no_nav_navno_TransportPage_Data {
    ingress: String
    panelsHeading: String
    panelItems(
        offset: Int
        first: Int
    ): [no_nav_navno_TransportPage_KlikkbartLenkepanel]
    feedbackToggle: Boolean
    chatbotToggle: Boolean
    metaDescription: String
    canonicalUrl: String
    noindex: Boolean
    keywords: String
}

# Klikkbart lenkepanel
type no_nav_navno_TransportPage_KlikkbartLenkepanel {
    title: String
    ingress: String
    url: no_nav_navno_TransportPage_PekerTilInnhold
}

# Peker til innhold
type no_nav_navno_TransportPage_PekerTilInnhold {
    text: String
    ref: Content
}

# URL - no.nav.navno:url
type no_nav_navno_Url implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: no_nav_navno_Url_Data
}

# URL data
type no_nav_navno_Url_Data {
    url: String
}

# NotExistsFilter input type
input NotExistsFilterInput {
    field: String!
}

# Number range input type
input NumberRangeInput {
    from: Float
    to: Float
}

# Occurrences.
type Occurrences {
    maximum: Int
    minimum: Int
}

# Page component' application config for application ['no.nav.navno']
type Page_no_nav_navno_ComponentDataApplicationConfig {
    page_with_side_menus: Page_no_nav_navno_page_with_side_menus
}

# Page component application config for application ['no.nav.navno'] and descriptor ['page-with-side-menus']
type Page_no_nav_navno_page_with_side_menus {
    leftMenuToggle: Boolean
    showInternalNav: Boolean
    leftMenuSticky: Boolean
    leftMenuHeader: String
    anchorLinks(
        contentId: ID
    ): [Page_no_nav_navno_page_with_side_menus_OverstyrLenketekster]
    rightMenuToggle: Boolean
    rightMenuSticky: Boolean
    title: String
}

# Overstyr lenketekster
type Page_no_nav_navno_page_with_side_menus_OverstyrLenketekster {
    anchorId: String
    linkText: String
}

# Page component data.
type PageComponentData {
    descriptor: String
    customized: Boolean
    config: PageComponentDataConfig
    configAsJson: JSON
    template: Content
}

# Page component config.
type PageComponentDataConfig {
    no_nav_navno: Page_no_nav_navno_ComponentDataApplicationConfig
}

type PageInfo {
    startCursor: String!
    endCursor: String!
    hasNext: Boolean!
}

# Part component application config for application ['no.nav.navno'] and descriptor ['button']
type Part_no_nav_navno_button {
    link: Part_no_nav_navno_button_
    type: String
    size: String
    fullwidth: Boolean
    icon: Content
    renderOnAuthState: String
}

type Part_no_nav_navno_button_ {
    _selected: Part_no_nav_navno_button__OptionEnum
    internal: Part_no_nav_navno_button_InternLenke
    external: Part_no_nav_navno_button_EksternLenke
}

#  option enum.
enum Part_no_nav_navno_button__OptionEnum {
    internal
    external
}

# Ekstern lenke
type Part_no_nav_navno_button_EksternLenke {
    url: String
    text: String
}

# Intern lenke
type Part_no_nav_navno_button_InternLenke {
    target: Content
    text: String
}

# Part component application config for application ['no.nav.navno'] and descriptor ['calculator']
type Part_no_nav_navno_calculator {
    header: String
    targetCalculator: Content
    filters(offset: Int, first: Int): [String]
    filterLogic: String
}

# Part component' application config for application ['no.nav.navno']
type Part_no_nav_navno_ComponentDataApplicationConfig {
    button: Part_no_nav_navno_button
    calculator: Part_no_nav_navno_calculator
    contact_option: Part_no_nav_navno_contact_option
    dynamic_alert: Part_no_nav_navno_dynamic_alert
    dynamic_header: Part_no_nav_navno_dynamic_header
    dynamic_link_list: Part_no_nav_navno_dynamic_link_list
    dynamic_link_panel: Part_no_nav_navno_dynamic_link_panel
    dynamic_news_list: Part_no_nav_navno_dynamic_news_list
    filters_menu: Part_no_nav_navno_filters_menu
    html_area: Part_no_nav_navno_html_area
    page_header: Part_no_nav_navno_page_header
    page_navigation_menu: Part_no_nav_navno_page_navigation_menu
    product_card_micro: Part_no_nav_navno_product_card_micro
    product_card_mini: Part_no_nav_navno_product_card_mini
    product_card: Part_no_nav_navno_product_card
    provider_card: Part_no_nav_navno_provider_card
}

# Part component application config for application ['no.nav.navno'] and descriptor ['contact-option']
type Part_no_nav_navno_contact_option {
    contactOptions: Part_no_nav_navno_contact_option_KontaktOssKanaler
    renderOnAuthState: String
}

# Chat
type Part_no_nav_navno_contact_option_Chat {
    ingress: String
}

# Egentilpasset
type Part_no_nav_navno_contact_option_Egentilpasset {
    title: String
    icon: String
    url: String
    ingress: String
}

# Kontakt-oss kanaler
type Part_no_nav_navno_contact_option_KontaktOssKanaler {
    _selected: Part_no_nav_navno_contact_option_KontaktOssKanaler_OptionEnum
    chat: Part_no_nav_navno_contact_option_Chat
    write: Part_no_nav_navno_contact_option_SkrivTilOss
    call: Part_no_nav_navno_contact_option_RingOss
    custom: Part_no_nav_navno_contact_option_Egentilpasset
}

# Kontakt-oss kanaler option enum.
enum Part_no_nav_navno_contact_option_KontaktOssKanaler_OptionEnum {
    chat
    write
    call
    custom
}

# Ring oss
type Part_no_nav_navno_contact_option_RingOss {
    sharedContactInformation: Content
    ingress: String
    phoneNumber: String
}

# Skriv til oss
type Part_no_nav_navno_contact_option_SkrivTilOss {
    title: String
    url: String
    ingress: String
}

# Part component application config for application ['no.nav.navno'] and descriptor ['dynamic-alert']
type Part_no_nav_navno_dynamic_alert {
    content(processHtml: ProcessHtmlInput): RichText
    type: String
    size: String
    inline: Boolean
    margin: String
    renderOnAuthState: String
}

# Part component application config for application ['no.nav.navno'] and descriptor ['dynamic-header']
type Part_no_nav_navno_dynamic_header {
    title: String
    anchorId: String
    hideFromInternalNavigation: Boolean
    titleTag: String
    justify: String
    typo: Part_no_nav_navno_dynamic_header_Typografi
    renderOnAuthState: String
}

# Tilpasset
type Part_no_nav_navno_dynamic_header_Tilpasset {
    typo: String
}

# Typografi
type Part_no_nav_navno_dynamic_header_Typografi {
    _selected: Part_no_nav_navno_dynamic_header_Typografi_OptionEnum
    default: String
    custom: Part_no_nav_navno_dynamic_header_Tilpasset
}

# Typografi option enum.
enum Part_no_nav_navno_dynamic_header_Typografi_OptionEnum {
    default
    custom
}

# Part component application config for application ['no.nav.navno'] and descriptor ['dynamic-link-list']
type Part_no_nav_navno_dynamic_link_list {
    title: String
    chevron: Boolean
    list: Part_no_nav_navno_dynamic_link_list_Lenker
    expandable: Boolean
    expandableTitle: String
    expandableAnchorId: String
    renderOnAuthState: String
}

# Ekstern lenke
type Part_no_nav_navno_dynamic_link_list_EksternLenke {
    url: String
    text: String
}

# Hent lenker fra innholdsliste
type Part_no_nav_navno_dynamic_link_list_HentLenkerFraInnholdsliste {
    numLinks: Int
    target: Content
}

# Intern lenke
type Part_no_nav_navno_dynamic_link_list_InternLenke {
    target: Content
    text: String
}

# Lenke
type Part_no_nav_navno_dynamic_link_list_Lenke {
    _selected: Part_no_nav_navno_dynamic_link_list_Lenke_OptionEnum
    internal: Part_no_nav_navno_dynamic_link_list_InternLenke
    external: Part_no_nav_navno_dynamic_link_list_EksternLenke
}

# Lenke option enum.
enum Part_no_nav_navno_dynamic_link_list_Lenke_OptionEnum {
    internal
    external
}

# Lenker
type Part_no_nav_navno_dynamic_link_list_Lenker {
    _selected: Part_no_nav_navno_dynamic_link_list_Lenker_OptionEnum
    contentList: Part_no_nav_navno_dynamic_link_list_HentLenkerFraInnholdsliste
    linkList: Part_no_nav_navno_dynamic_link_list_SettLenkerDirekte
}

# Lenker option enum.
enum Part_no_nav_navno_dynamic_link_list_Lenker_OptionEnum {
    contentList
    linkList
}

# Sett lenker direkte
type Part_no_nav_navno_dynamic_link_list_SettLenkerDirekte {
    links(offset: Int, first: Int): [Part_no_nav_navno_dynamic_link_list_Lenke]
}

# Part component application config for application ['no.nav.navno'] and descriptor ['dynamic-link-panel']
type Part_no_nav_navno_dynamic_link_panel {
    link: Part_no_nav_navno_dynamic_link_panel_
    ingress: String
    icon: Content
    background: Content
    variant: Part_no_nav_navno_dynamic_link_panel_Varianter
    renderOnAuthState: String
}

type Part_no_nav_navno_dynamic_link_panel_ {
    _selected: Part_no_nav_navno_dynamic_link_panel__OptionEnum
    internal: Part_no_nav_navno_dynamic_link_panel_InternLenke
    external: Part_no_nav_navno_dynamic_link_panel_EksternLenke
}

#  option enum.
enum Part_no_nav_navno_dynamic_link_panel__OptionEnum {
    internal
    external
}

# Bakgrunnsfarge
type Part_no_nav_navno_dynamic_link_panel_Bakgrunnsfarge {
    color: String
}

# Ekstern lenke
type Part_no_nav_navno_dynamic_link_panel_EksternLenke {
    url: String
    text: String
}

# Intern lenke
type Part_no_nav_navno_dynamic_link_panel_InternLenke {
    target: Content
    text: String
}

# Varianter
type Part_no_nav_navno_dynamic_link_panel_Varianter {
    _selected: Part_no_nav_navno_dynamic_link_panel_Varianter_OptionEnum
    vertical: String
    verticalWithBgColor: Part_no_nav_navno_dynamic_link_panel_VertikaltMedStortIkonOgBakgrunnsfarge
}

# Varianter option enum.
enum Part_no_nav_navno_dynamic_link_panel_Varianter_OptionEnum {
    vertical
    verticalWithBgColor
}

# Vertikalt med stort ikon og bakgrunnsfarge
type Part_no_nav_navno_dynamic_link_panel_VertikaltMedStortIkonOgBakgrunnsfarge {
    iconBg: Part_no_nav_navno_dynamic_link_panel_Bakgrunnsfarge
    iconJustify: String
}

# Part component application config for application ['no.nav.navno'] and descriptor ['dynamic-news-list']
type Part_no_nav_navno_dynamic_news_list {
    title: String
    contentList: Part_no_nav_navno_dynamic_news_list_InnholdslisteForNyheter
    moreNews: Part_no_nav_navno_dynamic_news_list_FlereNyheter
    expandable: Boolean
    expandableTitle: String
    expandableAnchorId: String
    renderOnAuthState: String
}

# Flere nyheter
type Part_no_nav_navno_dynamic_news_list_FlereNyheter {
    url: String
    text: String
}

# Innholdsliste for nyheter
type Part_no_nav_navno_dynamic_news_list_InnholdslisteForNyheter {
    numLinks: Int
    target: Content
}

# Part component application config for application ['no.nav.navno'] and descriptor ['filters-menu']
type Part_no_nav_navno_filters_menu {
    title: String
    description: String
    categories(
        offset: Int
        first: Int
    ): [Part_no_nav_navno_filters_menu_FilterKategori]
    expandable: Boolean
    expandableTitle: String
    expandableAnchorId: String
}

# Filter
type Part_no_nav_navno_filters_menu_Filter {
    filterName: String
    id: String
}

# Filter-kategori
type Part_no_nav_navno_filters_menu_FilterKategori {
    categoryName: String
    filters(offset: Int, first: Int): [Part_no_nav_navno_filters_menu_Filter]
}

# Part component application config for application ['no.nav.navno'] and descriptor ['html-area']
type Part_no_nav_navno_html_area {
    html(processHtml: ProcessHtmlInput): RichText
    expandable: Boolean
    expandableTitle: String
    expandableAnchorId: String
    filters(offset: Int, first: Int): [String]
    filterLogic: String
    renderOnAuthState: String
}

# Part component application config for application ['no.nav.navno'] and descriptor ['page-header']
type Part_no_nav_navno_page_header {
    title: String
    norwegianTitle: String
    renderOnAuthState: String
}

# Part component application config for application ['no.nav.navno'] and descriptor ['page-navigation-menu']
type Part_no_nav_navno_page_navigation_menu {
    title: String
    viewStyle: String
    anchorLinks(
        contentId: ID
    ): [Part_no_nav_navno_page_navigation_menu_OverstyrLenketekster]
}

# Overstyr lenketekster
type Part_no_nav_navno_page_navigation_menu_OverstyrLenketekster {
    anchorId: String
    linkText: String
}

# Part component application config for application ['no.nav.navno'] and descriptor ['product-card']
type Part_no_nav_navno_product_card {
    targetPage: Content
    ingressOverride: String
}

# Part component application config for application ['no.nav.navno'] and descriptor ['product-card-micro']
type Part_no_nav_navno_product_card_micro {
    header: String
    card_list(
        offset: Int
        first: Int
    ): [Part_no_nav_navno_product_card_micro_ProduktEllerLivssituasjon]
}

# Produkt eller livssituasjon
type Part_no_nav_navno_product_card_micro_ProduktEllerLivssituasjon {
    targetPage: Content
}

# Part component application config for application ['no.nav.navno'] and descriptor ['product-card-mini']
type Part_no_nav_navno_product_card_mini {
    header: String
    targetPage: Content
}

# Part component application config for application ['no.nav.navno'] and descriptor ['provider-card']
type Part_no_nav_navno_provider_card {
    link: Part_no_nav_navno_provider_card_
    description: String
    endnote: String
}

type Part_no_nav_navno_provider_card_ {
    _selected: Part_no_nav_navno_provider_card__OptionEnum
    internal: Part_no_nav_navno_provider_card_InternLenke
    external: Part_no_nav_navno_provider_card_EksternLenke
}

#  option enum.
enum Part_no_nav_navno_provider_card__OptionEnum {
    internal
    external
}

# Ekstern lenke
type Part_no_nav_navno_provider_card_EksternLenke {
    url: String
    text: String
}

# Intern lenke
type Part_no_nav_navno_provider_card_InternLenke {
    target: Content
    text: String
}

# Part component data.
type PartComponentData {
    descriptor: String!
    config: PartComponentDataConfig
    configAsJson: JSON
}

# Part component config.
type PartComponentDataConfig {
    no_nav_navno: Part_no_nav_navno_ComponentDataApplicationConfig
}

# Permission.
enum Permission {
    READ
    CREATE
    MODIFY
    DELETE
    PUBLISH
    READ_PERMISSIONS
    WRITE_PERMISSIONS
}

# Permissions.
type Permissions {
    inheritsPermissions: Boolean
    permissions: [AccessControlEntry]
}

# Fragment - portal:fragment
type portal_Fragment implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# Page-template - portal:page-template
type portal_PageTemplate implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: portal_PageTemplate_Data
}

# Page-template data
type portal_PageTemplate_Data {
    supports(offset: Int, first: Int): [String]
}

# Site - portal:site
type portal_Site implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
    data: portal_Site_Data
}

# Site data
type portal_Site_Data {
    description: String
}

# Template-folder - portal:template-folder
type portal_TemplateFolder implements Content {
    _id: ID!
    _name: String!
    _path: String!
    _references: [Content]
    creator: PrincipalKey
    modifier: PrincipalKey
    createdTime: DateTime
    modifiedTime: DateTime
    owner: PrincipalKey
    type: String
    contentType: ContentType
    displayName: String
    hasChildren: Boolean
    language: String
    valid: Boolean
    dataAsJson: JSON
    x: [ExtraData]
    pageAsJson(resolveTemplate: Boolean, resolveFragment: Boolean): JSON
    pageTemplate: Content
    components(resolveTemplate: Boolean, resolveFragment: Boolean): [Component]
    attachments: [Attachment]
    publish: PublishInfo
    pageUrl(type: UrlType, params: String): String
    site: portal_Site
    parent: Content
    children(offset: Int, first: Int, sort: String): [Content]
    childrenConnection(after: String, first: Int, sort: String): ContentConnection
    permissions: Permissions
}

# Principal key.
type PrincipalKey {
    value: String
    type: PrincipalType
    idProvider: String
    principalId: String
}

# Principal type.
enum PrincipalType {
    user
    group
    role
}

# Process HTML input type
input ProcessHtmlInput {
    type: UrlType
    imageWidths: [Int]
}

# Publish information.
type PublishInfo {
    from: String
    to: String
    first: String
}

type Query {
    guillotine: HeadlessCms
}

# QueryContentConnection
type QueryContentConnection {
    totalCount: Int!
    edges: [ContentEdge]
    pageInfo: PageInfo
    aggregationsAsJson: JSON
}

# Range aggregation input type
input RangeAggregationInput {
    field: String!
    ranges: [NumberRangeInput]
}

type regularOpeningHour {
    dayName: String
    from: String
    to: String
    status: String
}

type regularOpeningHours {
    hours: [regularOpeningHour]
}

# RichText type.
type RichText {
    raw: String
    processedHtml: String
    macrosAsJson: JSON
    macros: [Macro]
    images: [Image]
}

# RichText type for html-fragment
type RichTextHtmlFragment {
    processedHtml: String
    macros: [MacroHtmlFragment]
}

type specialOpeningHour {
    date: String
    from: String
    to: String
    status: String
}

type specialOpeningHours {
    title: String
    text: String
    footNote: String
    validFrom: String
    validTo: String
    hours: [specialOpeningHour]
}

# Stats aggregation input type
input StatsAggregationInput {
    field: String!
}

type Subscription {
    event: Event
}

# Terms aggregation input type
input TermsAggregationInput {
    field: String!
    order: String
    size: Int
}

# Text component data.
type TextComponentData {
    value(processHtml: ProcessHtmlInput): RichText!
}

# URL type.
enum UrlType {
    server
    absolute
}
