#import "../mixins/productTargetFragment.graphql"
#import "../mixins/productTargetMicroFragment.graphql"
#import "../mixins/formTypeFragment.graphql"
#import "../mixins/videoTargetFragment.graphql"
#import "../content-types/payoutDatesFragment.graphql"

fragment macros on Macro {
    name
    ref
    config {
        alert_box {
            type
            size
            inline
            body
        }
        button {
            text
            url
            content {
                _path
            }
        }
        button_blue {
            text
            url
            content {
                _path
            }
        }
        chatbot_link {
            text
            presentation
        }
        consent_banner_link {
            text
            presentation
        }
        chevron_link_external {
            text
            url
        }
        chevron_link_internal {
            target {
                _path
                displayName
            }
            text
        }
        fotnote {
            fotnote
        }
        global_value {
            decimals
            value
        }
        global_value_with_math {
            decimals
            expression
            variables
        }
        header_with_anchor {
            body
            id
            tag
            text
        }
        infoBoks {
            infoBoks
        }
        ingress {
            body
        }
        lenkeFiler {
            files {
                _path
            }
            text
        }
        link_to_layer {
            body
            href
            newTab
            tooltip
        }
        payout_dates {
            payoutDates {
                ...contentPayoutDates
            }
        }
        phone_link {
            chevron
            phoneNumber
            text
        }
        product_card_micro {
            header
            card_list {
                ...productTargetMicroMixin
            }
        }
        product_card_mini {
            targetPage {
                ...productTargetMixin
            }
        }
        quote {
            quote
        }
        saksbehandlingstid {
            caseTime {
                value
                unit
            }
        }
        tall {
            decimals
            verdi
        }
        uxsignals_widget {
            embedCode
        }
        varselBoks {
            varselBoks
        }
        video {
            title
            video
            language
            targetContent {
                ...videoTargetMixin
            }
        }
    }
}

# This macro can contain other macros and must be defined as a separate fragment
# to prevent circular queries
fragment html_fragmentMacro on Macro {
    config {
        html_fragment {
            fragmentId
            processedHtml {
                processedHtml
                macros {
                    ...macros
                    # Allow 2 levels of nested fragment macros
                    # (aaah so ugly, but there seems to be no support for recursive fragments)
                    config {
                        html_fragment {
                            fragmentId
                            processedHtml {
                                processedHtml
                                macros {
                                    ...macros
                                    config {
                                        html_fragment {
                                            fragmentId
                                            processedHtml {
                                                processedHtml
                                                macros {
                                                    ...macros
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        form_details {
                            targetFormDetails {
                                ... on no_nav_navno_FormDetails {
                                    dataAsJson
                                    data {
                                        ingress(processHtml: { type: server }) {
                                            ... on RichText {
                                                processedHtml
                                                macros {
                                                    ...macros
                                                }
                                            }
                                        }
                                        ...formTypeMixin
                                    }
                                }
                            }
                            showTitle
                            showIngress
                            showApplications
                            showAddendums
                        }
                    }
                }
            }
        }
    }
}

fragment form_detailsMacro on Macro {
    config {
        form_details {
            targetFormDetails {
                ... on no_nav_navno_FormDetails {
                    dataAsJson
                    data {
                        ingress(processHtml: { type: server }) {
                            ... on RichText {
                                processedHtml
                                macros {
                                    ...macros
                                    ...html_fragmentMacro
                                }
                            }
                        }
                        ...formTypeMixin
                    }
                }
            }
            showTitle
            showIngress
            showApplications
            showAddendums
        }
    }
}
