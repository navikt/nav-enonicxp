import { defineConfig, globalIgnores } from "eslint/config";
import { fixupConfigRules, fixupPluginRules } from "@eslint/compat";
import prettier from "eslint-plugin-prettier";
import typescriptEslint from "@typescript-eslint/eslint-plugin";
import _import from "eslint-plugin-import";
import tsParser from "@typescript-eslint/parser";
import path from "node:path";
import { fileURLToPath } from "node:url";
import js from "@eslint/js";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const compat = new FlatCompat({
    baseDirectory: __dirname,
    recommendedConfig: js.configs.recommended,
    allConfig: js.configs.all
});

export default defineConfig([globalIgnores([
    ".idea/**/workspace.xml",
    ".idea/**/tasks.xml",
    ".idea/**/usage.statistics.xml",
    ".idea/**/dictionaries",
    ".idea/**/shelf",
    ".idea/**/contentModel.xml",
    ".idea/**/dataSources/",
    ".idea/**/dataSources.ids",
    ".idea/**/dataSources.local.xml",
    ".idea/**/sqlDataSources.xml",
    ".idea/**/dynamic.xml",
    ".idea/**/uiDesigner.xml",
    ".idea/**/dbnavigator.xml",
    ".idea/**/gradle.xml",
    ".idea/**/libraries",
    "**/cmake-build-*/",
    ".idea/**/mongoSettings.xml",
    "**/*.iws",
    "**/out/",
    "**/.idea_modules/",
    "**/atlassian-ide-plugin.xml",
    ".idea/replstate.xml",
    "**/com_crashlytics_export_strings.xml",
    "**/crashlytics.properties",
    "**/crashlytics-build.properties",
    "**/fabric.properties",
    ".idea/httpRequests",
    ".idea/sonarlint",
    "**/*.class",
    "**/*.log",
    "**/*.ctxt",
    "**/.mtj.tmp/",
    "**/*.jar",
    "**/*.war",
    "**/*.nar",
    "**/*.ear",
    "**/*.zip",
    "**/*.tar.gz",
    "**/*.rar",
    "**/hs_err_pid*",
    "**/target/",
    "**/.DS_Store",
    "**/.AppleDouble",
    "**/.LSOverride",
    "**/Icon",
    "**/._*",
    "**/.DocumentRevisions-V100",
    "**/.fseventsd",
    "**/.Spotlight-V100",
    "**/.TemporaryItems",
    "**/.Trashes",
    "**/.VolumeIcon.icns",
    "**/.com.apple.timemachine.donotpresent",
    "**/.AppleDB",
    "**/.AppleDesktop",
    "**/Network Trash Folder",
    "**/Temporary Items",
    "**/.apdisk",
    "**/logs",
    "**/npm-debug.log*",
    "**/yarn-debug.log*",
    "**/yarn-error.log*",
    "**/pids",
    "**/*.pid",
    "**/*.seed",
    "**/*.pid.lock",
    "**/lib-cov",
    "**/coverage",
    "**/.nyc_output",
    "**/.grunt",
    "**/bower_components",
    "**/.lock-wscript",
    "build/Release",
    "**/node_modules/",
    "**/jspm_packages/",
    "**/typings/",
    "**/.npm",
    "**/.eslintcache",
    "**/.node_repl_history",
    "**/*.tgz",
    "**/.yarn-integrity",
    "**/.env",
    "**/.cache",
    "**/.next",
    "**/.nuxt",
    ".vuepress/dist",
    "**/.serverless",
    "**/.gradle",
    "build/",
    "**/gradle-app.setting",
    "!**/gradle-wrapper.jar",
    "**/.gradletasknamecache",
    "**/build",
    "**/*.html",
    "**/*.xml",
]), {
    extends: fixupConfigRules(compat.extends(
        "prettier",
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:import/recommended",
        "plugin:import/typescript",
    )),
    plugins: {
        prettier,
        "@typescript-eslint": fixupPluginRules(typescriptEslint),
        import: fixupPluginRules(_import),
    },
    languageOptions: {
        globals: {
            require: true,
            log: true,
            exports: true,
            resolve: true,
            app: true,
            fetch: true,
            document: true,
            window: true,
            __: true,
            __FILE__: true,
            Java: true,
            module: true,
        },

        parser: tsParser,
    },
    settings: {
        "import/parsers": {
            "@typescript-eslint/parser": [".ts"],
        },

        "import/resolver": {
            typescript: {
                project: [
                    "tsconfig.json",
                    "test/unit-tests/tsconfig.json",
                    "test/e2e-tests/tsconfig.json",
                    "test/e2e-tests/.xp-test-data-app/tsconfig.json",
                ],
            },
        },
    },
    rules: {
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unused-vars": ["warn", {
            varsIgnorePattern: "^_$",
            argsIgnorePattern: "^_$",
        }],
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/triple-slash-reference": "off",
        camelcase: "off",
        "comma-dangle": ["error", "only-multiline"],
        "dot-notation": "off",
        "func-names": "off",
        "global-require": "off",
        "import/no-absolute-path": ["error", {
            ignore: [
                "^/lib/xp",
                "^/lib/http-client",
                "^/lib/cache",
                "^/lib/thymeleaf",
                "^/lib/guillotine",
                "^/lib/graphql",
                "^/lib/graphql-rx",
                "^/assets",
            ],
        }],
        "import/no-named-as-default-member": "off",
        "import/no-unresolved": ["error", {
            ignore: [
                "^/lib/xp",
                "^/lib/http-client",
                "^/lib/cache",
                "^/lib/thymeleaf",
                "^/lib/guillotine",
                "^/lib/graphql",
                "^/lib/graphql-rx",
                "^/assets",
            ],
        }],
        "no-case-declarations": "off",
        "no-cond-assign": ["error", "except-parens"],
        "no-console": "error",
        "no-extend-native": "off",
        "no-param-reassign": "off",
        "no-plusplus": "off",
        "no-restricted-globals": "off",
        "no-restricted-imports": ["error", {
            patterns: [{
                group: ["?/lib/xp/*"],
                message: "Imports from /lib/xp/* must not be prefixed with anything",
            }, {
                group: ["@enonic-types/*"],
                message: "@enonic-types modules should not be imported directly (use /lib/xp/*)",
            }, {
                group: ["?types/xp-libs/*"],
                message: "xp-libs patches should not be imported directly (use /lib/xp/*)",
            }],
        }],
        "no-underscore-dangle": "off",
        "no-unsafe-optional-chaining": "off",
        "no-use-before-define": "off",
        "object-shorthand": "off",
        "prefer-destructuring": "off",
        "prefer-template": "off",
        radix: ["error", "as-needed"],
    },
}, {
    files: ["**/*.html", "**/*.ftl", "**/*.xml"],
    rules: {
        "max-len": "off",
    },
}, {
    files: ["src/main/resources/types/**/*.d.ts"],
    rules: {
        "import/no-unresolved": ["off", {
            ignore: ["/lib/xp"],
        }],
        "no-restricted-imports": "off",
    },
}, {
    files: ["test/**/*.*"],
    rules: {
        "no-console": "off",
        "no-restricted-imports": "off",
    },
}]);
